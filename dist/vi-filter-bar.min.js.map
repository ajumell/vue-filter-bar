{"version":3,"sources":["short.js"],"names":["visitorModal","Vue","component","props","data","_availableFilters","filters","numberOfAvailableProperties","collapsed","methods","addFilter","vm","push","filterProperty","filterPropertyLabel","filterValue","filterValueLabel","filterRequired","selectionMode","delimiter","getFilterFunction","getFilter","getAvailableFilterProperties","addRequiredFilter","propertyLabel","filter","label","getDefaultValue","filerPropertyInUse","old","new","value","values","default","deleteFilter","tempfilters","status","opt","oldLabel","newLabel","newFilter","oldFilter","result","property","length","propsAvailable","triggerCallback","options","uri","$emit","toggleCoppapse","console","log","computed","slice","created","required","template","availableProperties","requestAvailableProperties","setFilterProperty","previousLabel","mounted","checked","dropdownTitle","apply","setTimeout","string","getValues","setFilterValue","Value","Label","checkboxClick","filterSplitted","split","index","indexOf","newArray","i","newFilterValue","substring","searchString","watch","encodeURIComponent"],"mappings":"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","sourcesContent":["var visitorModal = Vue.component('vi-filter-bar', {\r\n    props: ['options'],\r\n    data: ()=>{\r\n        return {\r\n            _availableFilters : null,\r\n            filters:[],\r\n            numberOfAvailableProperties: 0,\r\n            collapsed: false,\r\n        }\r\n    },\r\n    methods: {\r\n        //i.o.\r\n        addFilter(){\r\n            let vm = this;\r\n            vm.filters.push({\r\n                _availableFilters: vm._availableFilters,\r\n                filterProperty: null,\r\n                filterPropertyLabel: null,\r\n                filterValue: null,\r\n                filterValueLabel: null,\r\n                filterRequired: false,\r\n                selectionMode: 'single',\r\n                delimiter: ',',\r\n                getFilterFunction: vm.getFilter,\r\n                getAvailableFilterProperties: vm.getAvailableFilterProperties\r\n            });\r\n        },\r\n\r\n        addRequiredFilter(propertyLabel){\r\n            let vm = this;\r\n\r\n            let filter = vm.getFilter(propertyLabel)\r\n\r\n            vm.filters.push({\r\n                _availableFilters: vm._availableFilters,\r\n                filterProperty: filter.filterProperty,\r\n                filterPropertyLabel: filter.label,\r\n                filterValue: vm.getDefaultValue(filter.label).filterValue || null,\r\n                filterValueLabel: vm.getDefaultValue(filter.label).label || null,\r\n                filterRequired: true,\r\n                delimiter: filter.delimiter || ',',\r\n                selectionMode: filter.selectionMode || 'single',\r\n                getFilterFunction: vm.getFilter,\r\n                getAvailableFilterProperties: ()=>{return false}\r\n            });\r\n\r\n            vm.filerPropertyInUse({old:null, new: filter.label})\r\n        },\r\n        getDefaultValue(propertyLabel){\r\n            \r\n            let filter = this.getFilter(propertyLabel);\r\n\r\n            if(filter.selectionMode == 'single'){\r\n                //Search for default value\r\n                for(value of filter.values){\r\n                    if(value.default){\r\n                        return value\r\n                    }\r\n                }\r\n                //If no default value was found, the first element would be taken as a default.\r\n                return filter.values[0];\r\n            }\r\n            return false;\r\n        },\r\n        //Delete an Filter from the filters array\r\n        deleteFilter(filterProperty){\r\n            let vm = this;\r\n            //delete filter from filters array.\r\n            let tempfilters = []\r\n            \r\n            for(filter of vm.filters){\r\n                if(filter.filterProperty != filterProperty){\r\n                    tempfilters.push(filter);\r\n                }else{\r\n                    filter.status = 1;\r\n                }\r\n            }\r\n            //override filters array with temp array.\r\n            vm.filters = tempfilters;\r\n            if(filterProperty != null){\r\n                vm.getAvailableFilterProperties()\r\n            }\r\n        },\r\n\r\n        //Mark filter property as in use\r\n        filerPropertyInUse(opt){\r\n            let vm = this;\r\n            \r\n            let oldLabel = opt.old;\r\n            let newLabel = opt.new;\r\n\r\n            let newFilter = vm.getFilter(newLabel);\r\n            //set status to 'in use'\r\n            newFilter.status = 0;\r\n            //newFilter.required = false;\r\n\r\n            if(oldLabel){\r\n                let oldFilter = vm.getFilter(oldLabel);\r\n                //set status to 'available'\r\n                oldFilter.status = 1;\r\n            }\r\n        },\r\n\r\n        //This request returns a list of available (not in use) filters\r\n        getAvailableFilterProperties(){\r\n            let vm = this;\r\n            let result = [];\r\n            for (property of vm._availableFilters){\r\n                if(property.status > 0){\r\n                    result.push(property.label)\r\n                }      \r\n            } \r\n            if(result.length > 0){\r\n                vm.propsAvailable = true;\r\n                vm.numberOfAvailableProperties = result.length;\r\n                return result;\r\n            }else{\r\n                vm.propsAvailable = false;\r\n                vm.deleteFilter(null);\r\n                vm.numberOfAvailableProperties = 0;\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //Returns the filter object from the _availableFilters property\r\n        getFilter(propertyLabel){\r\n            if(propertyLabel != null){\r\n                let vm = this;\r\n                for(property of vm._availableFilters){\r\n                    if(propertyLabel == property.label){\r\n                        return property;\r\n                    }\r\n                }\r\n            }else{\r\n                return false\r\n            }\r\n        },\r\n        \r\n        triggerCallback(){\r\n            let vm = this;\r\n            vm.options.uri = vm.uri;\r\n            vm.$emit('trigger-callback', vm.options.uri)\r\n        },\r\n\r\n        toggleCoppapse(){\r\n            let vm = this;\r\n            vm.collapsed = !vm.collapsed;\r\n            console.log(vm.collapsed);\r\n        }\r\n    },\r\n    computed: {\r\n        uri(){\r\n            let vm = this;\r\n            let uri = '';\r\n            for(filter of vm.filters){\r\n                if(filter.filterProperty != null && filter.filterValue != null){\r\n                    //build uri string from filter property and value\r\n                    uri += '&'+filter.filterProperty + '=' + filter.filterValue;\r\n                }\r\n            }\r\n            return uri.slice(1, uri.length);\r\n        },\r\n    },\r\n    created: async function(){\r\n        let vm = this;\r\n        \r\n        //Copy filters array and add status property\r\n        vm._availableFilters= vm.options.filters\r\n        for(filter of vm._availableFilters){\r\n            filter.status = 1;\r\n            //add required filters\r\n            if(filter.required){\r\n                vm.addRequiredFilter(filter.label);\r\n            }\r\n        }\r\n\r\n        vm.getAvailableFilterProperties()\r\n        \r\n    },\r\n    template: \r\n    `\r\n    <div class=\"vi-filter-bar\">\r\n        <div class=\"collapse-toggle\">\r\n            <button v-if=\"!collapsed\" type=\"button\" class=\"btn\" v-on:click=\"toggleCoppapse()\"><img class=\"clickable\" src=\"./assets/collapse-close.png\" width=\"15\" height=\"15\"></button>\r\n            <button v-if=\"collapsed\" type=\"button\" class=\"btn\" v-on:click=\"toggleCoppapse()\"><img class=\"clickable\" src=\"./assets/collapse-open.png\" width=\"15\" height=\"15\"></button>\r\n        </div>    \r\n        \r\n        <h5>Filter options</h5>\r\n        \r\n        <table v-if=\"!collapsed\">\r\n            <tr>\r\n                <td v-for=\"filter in filters\">\r\n                    <vi-filter v-bind:filter=\"filter\" v-on:filter-delete=\"deleteFilter($event)\" v-on:filter-property-selected=\"filerPropertyInUse($event)\"></vi-filter>\r\n                </td>\r\n                <td class=\"left\"></td>\r\n                <td>\r\n                    <div v-if=\"true\">\r\n                        <button type=\"button\" class=\"btn\" v-on:click=\"addFilter()\"><img class=\"clickable\" src='./assets/add.png' width=\"20\" height=\"20\"> ({{numberOfAvailableProperties}})</button>\r\n                    </div>\r\n                    \r\n                </td>\r\n                <td>\r\n                    <button type=\"button\" class=\"btn\" v-on:click=\"triggerCallback()\"><img class=\"clickable\" src='./assets/reload.png' width=\"20\" height=\"20\"></button>\r\n                </td>\r\n            </tr>            \r\n            \r\n                \r\n        </table>\r\n        <p class=\"mono\">{{uri}}</p>\r\n    </div> \r\n    `\r\n\r\n})\r\nvar visitorModal = Vue.component('vi-filter', {\r\n    props: ['filter'],\r\n    data: ()=>{\r\n        return {\r\n            availableProperties: [],\r\n        }\r\n    },\r\n    methods: {\r\n        requestAvailableProperties(){\r\n            let vm = this;\r\n            vm.availableProperties = vm.filter.getAvailableFilterProperties();\r\n        },\r\n        \r\n        setFilterProperty(propertyLabel){\r\n            let vm = this;\r\n            //overrides filter Value\r\n            vm.filter.filterValue = null;\r\n            vm.filter.filterValueLabel = null;\r\n\r\n            //get propertyValue for the given property label\r\n            let filter = vm.filter.getFilterFunction(propertyLabel);\r\n            \r\n            let previousLabel = vm.filter.filterPropertyLabel;\r\n\r\n            //Rebuild properties\r\n            vm.filter.filterProperty = filter.filterProperty;\r\n            vm.filter.filterPropertyLabel = filter.label;\r\n            vm.filter.selectionMode = filter.selectionMode;\r\n\r\n            vm.$emit('filter-property-selected', {old: previousLabel, new: vm.filter.filterPropertyLabel});\r\n\r\n            vm.requestAvailableProperties();\r\n\r\n        },\r\n        deleteFilter(){\r\n            let vm = this;\r\n            \r\n            let filter = vm.filter.getFilterFunction(vm.filter.filterPropertyLabel);\r\n            if(filter){\r\n                filter.status = 1;\r\n            }\r\n            this.$emit('filter-delete', vm.filter.filterProperty);\r\n        },\r\n        \r\n    },\r\n    computed: {   \r\n    },\r\n    mounted: async function(){\r\n        let vm = this;\r\n        //vm.requestAvailableProperties();\r\n        \r\n        /*if(vm.filter.selectionMode == 'multiple'){\r\n            //handle default value fur mulitple filter\r\n            let values = vm.getValues(vm.filter.filterPropertyLabel);\r\n            \r\n            for(value of values){\r\n                if(value.default){\r\n                    checkboxClick(value.filterValue, value.label);\r\n                }\r\n            }\r\n        }*/\r\n        \r\n\r\n\r\n    },\r\n    template: \r\n    `\r\n    <div class=\"vi-filter\">\r\n        <table>\r\n            <tr>\r\n                <td class=\"left\">\r\n                    <div class=\"btn-group m-1\">\r\n                        <button class=\"btn btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-on:click=\"requestAvailableProperties()\">\r\n                            {{filter.filterPropertyLabel}}\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" >\r\n                            <a class=\"dropdown-item clickable\" v-for=\"prop in availableProperties\" v-on:click=\"setFilterProperty(prop)\">{{prop}}</a>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"btn-group m-1\" >\r\n\r\n                        <vi-single-filter v-bind:filter=\"filter\" v-if=\"filter.selectionMode == 'single'\"></vi-single-filter>\r\n\r\n                        <vi-multi-filter v-bind:filter=\"filter\" v-if=\"filter.selectionMode == 'multiple'\"></vi-multi-filter>\r\n\r\n                        <vi-search-filter v-bind:filter=\"filter\" v-if=\"filter.selectionMode == 'search'\"></vi-search-filter>\r\n                        \r\n                    </div>\r\n                </td>\r\n                <td v-if=\"!filter.filterRequired\">\r\n                    <img class=\"clickable\" src='./assets/delete.png' width=\"15\" height=\"15\" v-on:click=\"deleteFilter()\">\r\n                </td>\r\n            </tr>\r\n        </table>\r\n\r\n    </div> \r\n    `\r\n\r\n})\r\nvar visitorModal = Vue.component('vi-multi-filter', {\r\n    props: ['filter'],\r\n    data: ()=>{\r\n        return {\r\n            availableProperties: [],\r\n            //delimiter: ';',\r\n            checked:[],\r\n            dropdownTitle: 'none'\r\n        }\r\n    },\r\n    methods: {\r\n        apply(filterValue){\r\n            let vm = this;\r\n            setTimeout(function(){\r\n                \r\n                console.log('multi-filter has been applied');\r\n                console.log(vm.checked);\r\n\r\n                if(vm.checked.length > 1){\r\n                    vm.dropdownTitle = 'multiple'\r\n                }else if(vm.checked.length < 1){\r\n                    vm.dropdownTitle = 'none'\r\n                }else{\r\n                    vm.dropdownTitle = vm.checked[0].label;\r\n                }\r\n\r\n                //concat filter values\r\n                let string = ''\r\n                for(value of vm.checked){\r\n                    string += value.filterValue;\r\n                    //for all elements except for the last element\r\n                    if(value !== vm.checked[vm.checked.length-1]){\r\n                        string += vm.filter.delimiter;\r\n                    }\r\n                }\r\n\r\n                vm.filter.filterValue = string;\r\n\r\n                //vm.$emit('filter-apply');\r\n            },0);\r\n            \r\n        },\r\n\r\n        getValues(propertyLabel){\r\n            let vm = this;\r\n\r\n            if(propertyLabel != null){\r\n                let filter = vm.filter.getFilterFunction(propertyLabel);\r\n                return filter.values;\r\n            }else{\r\n                return []\r\n            } \r\n        },\r\n\r\n        setFilterValue(Value, Label){\r\n            let vm = this;\r\n            vm.filter.filterValue = Value;\r\n            vm.filter.filterValueLabel = Label;\r\n        },\r\n        checkboxClick(Value, Label){\r\n\r\n            let vm = this;           \r\n            if(vm.filter.filterValue != null){\r\n                \r\n                let filterSplitted = vm.filter.filterValue.split(vm.delimiter);\r\n                \r\n                //check if the filter is already checked - if so the filter must be removed\r\n                let index = filterSplitted.indexOf(Value)\r\n                if(index > -1){\r\n                    //filter is already set and has to be removed.\r\n                    \r\n                    \r\n                    let newArray= [];\r\n                    for(i of filterSplitted){\r\n                        if(i != Value && i != ''){\r\n                            newArray.push(i);\r\n                        }\r\n                    }\r\n\r\n                    filterSplitted = newArray;\r\n                  \r\n                    let newFilterValue = '';\r\n                    for(i of filterSplitted){\r\n                        newFilterValue += vm.delimiter + i;\r\n                    }\r\n                    vm.filter.filterValue = newFilterValue.substring(1);\r\n\r\n                }else{\r\n                    vm.filter.filterValue += vm.delimiter + Value;\r\n                    vm.filter.filterValueLabel = 'Multi';\r\n                }\r\n\r\n\r\n            }else{\r\n                vm.filter.filterValue = Value;\r\n                vm.filter.filterValueLabel = Label;\r\n            }\r\n\r\n            if(vm.filter.filterValue.substring(0,1) == ','){\r\n                vm.filter.filterValue = vm.filter.filterValue.substring(1);\r\n            } \r\n        },\r\n        \r\n    },\r\n    computed: {   \r\n    },\r\n    mounted: async function(){\r\n        let vm = this;\r\n        //vm.requestAvailableProperties();\r\n        \r\n        \r\n        //defult values\r\n        /*\r\n        let filter = vm.filter.getFilterFunction(vm.filter.filterPropertyLabel)\r\n        \r\n        for(value of filter.values){\r\n            if(value.default){\r\n                vm.checked.push({\r\n                    label : value.label,\r\n                    filterValue : value.filterValue\r\n                })\r\n            }\r\n        }*/ \r\n    },\r\n    template: \r\n    `\r\n    <div class=\"vi-multi-filter\">\r\n        <button class=\"btn btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {{dropdownTitle}}\r\n        </button>\r\n        <div class=\"dropdown-menu\" v-if=\"filter.selectionMode == 'multiple'\">\r\n            <h6 class=\"dropdown-header\">{{filter.filterProperty}}</h6>\r\n            <div class=\"form-group\" >\r\n                <div class=\"form-check\" v-for=\"v in getValues(filter.filterPropertyLabel)\" >\r\n                    <input class=\"form-check-input\" type=\"checkbox\" v-bind:value=\"v\" v-model=\"checked\" v-on:click=\"apply(v)\">\r\n                    <label class=\"form-check-label\">\r\n                        {{v.label}}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> \r\n\r\n        \r\n    `\r\n\r\n});\r\n\r\n//v-on:click=\"checkboxClick(value.filterValue, value.label)\"\r\n\r\nvar visitorModal = Vue.component('vi-search-filter', {\r\n    props: ['filter'],\r\n    data: ()=>{\r\n        return {\r\n            searchString: ''\r\n        }\r\n    },\r\n    methods: {\r\n        \r\n    },\r\n    watch: { \r\n        searchString: function(newVal, oldVal) { \r\n            let vm = this;\r\n            //vm.filter.filterValue = vm.searchString.split(\" \").join(\"%20\");\r\n            //vm.filter.filterValue = vm.filter.filterValue.split(\"/\").join(\"%2F\");\r\n\r\n            vm.filter.filterValue = encodeURIComponent(vm.searchString);\r\n            console.log('searchString changed');\r\n\r\n            if(this.searchString.length < 1){\r\n                vm.filter.filterValue = null;\r\n\r\n            }\r\n            \r\n      }\r\n    },\r\n    computed: {   \r\n    },\r\n    mounted: async function(){\r\n        let vm = this;\r\n        //vm.requestAvailableProperties();\r\n        \r\n    },\r\n    template: \r\n    `\r\n    <div class=\"vi-single-filter\">\r\n        \r\n        <label for=\"exampleInputEmail1\">{{filter.filterValueLabel}}</label>\r\n        <input type=\"text\" class=\"form-control-sm\" id=\"exampleInputEmail1\" v-model=\"searchString\" aria-describedby=\"search\" >\r\n        \r\n    </div> \r\n    `\r\n\r\n})\r\nvar visitorModal = Vue.component('vi-single-filter', {\r\n    props: ['filter'],\r\n    data: ()=>{\r\n        return {\r\n            \r\n        }\r\n    },\r\n    methods: {\r\n        apply(){\r\n            vm.$emit('filter-apply');\r\n        },\r\n\r\n        getValues(propertyLabel){\r\n            let vm = this;\r\n\r\n            if(propertyLabel != null){\r\n                let filter = vm.filter.getFilterFunction(propertyLabel);\r\n                return filter.values;\r\n            }else{\r\n                return []\r\n            } \r\n        },\r\n\r\n        setFilterValue(Value, Label){\r\n            let vm = this;\r\n            vm.filter.filterValue = Value;\r\n            vm.filter.filterValueLabel = Label;\r\n        },\r\n        \r\n    },\r\n    computed: {   \r\n    },\r\n    mounted: async function(){\r\n        let vm = this;\r\n        //vm.requestAvailableProperties();\r\n        \r\n    },\r\n    template: \r\n    `\r\n    <div class=\"vi-single-filter\">\r\n        <button class=\"btn btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {{filter.filterValueLabel}}\r\n        </button>\r\n\r\n        <div class=\"dropdown-menu\" >      \r\n            <h6 class=\"dropdown-header\">{{filter.filterProperty}}</h6>\r\n            <a class=\"dropdown-item clickable\" v-for=\"value in getValues(filter.filterPropertyLabel)\" v-on:click=\"setFilterValue(value.filterValue, value.label)\">{{value.label}}</a>\r\n        </div>\r\n    </div> \r\n    `\r\n\r\n})"],"file":"vi-filter-bar.min.js"}